{"remainingRequest":"/Users/faidz/Documents/Test/docs/docs/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/faidz/Documents/Test/docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!/Users/faidz/Documents/Test/docs/docs/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/faidz/Documents/Test/docs/docs/node_modules/vue-loader/lib/index.js??ref--1-1!/Users/faidz/Documents/Test/docs/docs/node_modules/@vuepress/markdown-loader/index.js??ref--1-2!/Users/faidz/Documents/Test/docs/docs/src/guide/glossary-of-terms.md?vue&type=template&id=64caed4d&","dependencies":[{"path":"/Users/faidz/Documents/Test/docs/docs/src/guide/glossary-of-terms.md","mtime":1664682310842},{"path":"/Users/faidz/Documents/Test/docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1663088932772},{"path":"/Users/faidz/Documents/Test/docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1663088932772},{"path":"/Users/faidz/Documents/Test/docs/docs/node_modules/babel-loader/lib/index.js","mtime":1663088928869},{"path":"/Users/faidz/Documents/Test/docs/docs/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1663088932646},{"path":"/Users/faidz/Documents/Test/docs/docs/node_modules/cache-loader/dist/cjs.js","mtime":1663088932772},{"path":"/Users/faidz/Documents/Test/docs/docs/node_modules/vue-loader/lib/index.js","mtime":1663088932644},{"path":"/Users/faidz/Documents/Test/docs/docs/node_modules/@vuepress/markdown-loader/index.js","mtime":1663088933566}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}